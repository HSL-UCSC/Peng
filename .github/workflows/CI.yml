name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v4
      - name: Cache Cargo registry
        uses: actions/cache@v3
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-

      - name: Cache Cargo build
        uses: actions/cache@v3
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-build-

      - name: Install rerun requirements on Ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get -y install \
            libclang-dev \
            libatk-bridge2.0 \
            libfontconfig1-dev \
            libfreetype6-dev \
            libglib2.0-dev \
            libgtk-3-dev \
            libssl-dev \
            libxcb-render0-dev \
            libxcb-shape0-dev \
            libxcb-xfixes0-dev \
            libxkbcommon-dev \
            patchelf \
            libudev-dev \
            cmake \
            protobuf-compiler

      - name: Install Protobuf and CMake on macOS
        if: runner.os == 'macos-latest'
        run: |
          brew install cmake protobuf
          protoc --version
          cmake --version

      - name: Install Protobuf on Windows
        if: runner.os == 'windows-latest'
        run: |
          choco install cmake --installargs '"ADD_CMAKE_TO_PATH=System"'
          choco install protoc
          protoc --version
          cmake --version

      - name: Build
        run: cargo build --verbose
      - name: Run tests
        run: cargo test --verbose
      - name: Check formatting
        run: cargo fmt -- --check

      - name: Run Clippy (linting)
        run: cargo clippy -- -D warnings
