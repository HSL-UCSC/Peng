name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always

jobs:
  nix-build: # Job for Linux and macOS using Nix flakes
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v26
        with:
          extra_nix_config: |
            experimental-features = nix-command flakes
          nix_path: nixpkgs=channel:nixos-unstable

      - name: Setup Cachix (optional)
        uses: cachix/cachix-action@v12
        with:
          name: my-cachix-cache # Replace with your Cachix cache name if applicable
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}

      - name: Enter Nix flake shell & Build
        run: |
          nix develop --command cargo build --verbose

      - name: Run Tests
        run: |
          nix develop --command cargo test --verbose

      - name: Check Formatting
        run: |
          nix develop --command cargo fmt -- --check

      - name: Run Clippy (Linting)
        run: |
          nix develop --command cargo clippy -- -D warnings

  windows-build: # Job for Windows using original setup
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Cache Cargo registry
        uses: actions/cache@v3
        with:
          path: ~/.cargo/registry
          key: windows-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            windows-cargo-registry-

      - name: Cache Cargo build
        uses: actions/cache@v3
        with:
          path: target
          key: windows-cargo-build-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            windows-cargo-build-

      - name: Install Protobuf on Windows
        run: |
          choco install cmake --installargs '"ADD_CMAKE_TO_PATH=System"'
          choco install protoc
          protoc --version
          cmake --version

      - name: Build
        run: cargo build --verbose

      - name: Run tests
        run: cargo test --verbose

      - name: Check formatting
        run: cargo fmt -- --check

      - name: Run Clippy (Linting)
        run: cargo clippy -- -D warnings
